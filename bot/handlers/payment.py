from telegram import Update
from telegram.ext import (
    CallbackQueryHandler,
    MessageHandler,
    filters,
    ContextTypes
)
from bot.keyboards import (
    get_main_menu_keyboard,
    get_tips_keyboard,
    get_payment_keyboard
)
from salon.models import Appointment

async def handle_payment(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    appointment_id = int(query.data.split('_')[1])
    appointment = Appointment.objects.get(id=appointment_id)
    
    # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–º–µ—á–∞–µ–º –∫–∞–∫ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–µ
    appointment.is_paid = True
    appointment.save()
    
    await query.edit_message_text(
        "–û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å –±–∞–Ω–∫–∞...\n\n"
        "–î–ª—è —Ç–µ—Å—Ç–∞ –æ–ø–ª–∞—Ç–∞ –∏–º–∏—Ç–∏—Ä–æ–≤–∞–Ω–∞. –°–ø–∞—Å–∏–±–æ!"
    )
    
    await query.message.reply_text(
        "–•–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —á–∞–µ–≤—ã–µ –º–∞—Å—Ç–µ—Ä—É?",
        reply_markup=get_tips_keyboard(appointment_id)
    )

async def handle_tips(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    appointment_id = int(query.data.split('_')[1])
    tip_amount = int(query.data.split('_')[2])
    
    appointment = Appointment.objects.get(id=appointment_id)
    appointment.tip_amount = tip_amount
    appointment.save()
    
    await query.edit_message_text(
        f"–°–ø–∞—Å–∏–±–æ –∑–∞ —á–∞–µ–≤—ã–µ –≤ —Ä–∞–∑–º–µ—Ä–µ {tip_amount}‚ÇΩ!\n"
        "–ú–∞—Å—Ç–µ—Ä –±—É–¥–µ—Ç –æ—á–µ–Ω—å —Ä–∞–¥ üòä"
    )

def register_handlers(application):
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –æ–ø–ª–∞—Ç—ã (pay_123 –≥–¥–µ 123 - ID –∑–∞–ø–∏—Å–∏)
    application.add_handler(CallbackQueryHandler(handle_payment, pattern="^pay_"))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —á–∞–µ–≤—ã—Ö (tip_123_500 –≥–¥–µ 123 - ID –∑–∞–ø–∏—Å–∏, 500 - —Å—É–º–º–∞)
    application.add_handler(CallbackQueryHandler(handle_tips, pattern="^tip_"))